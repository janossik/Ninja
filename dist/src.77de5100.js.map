{"version":3,"sources":["world/world.ts","helpers/helpers.ts","player/player.ts","index.ts"],"names":[],"mappings":";;;;;;AGAA,IAAA,OAAA,GAAA,OAAA,CAAA,eAAA,CAAA;AFAO,ACEP,AFFA,ICAa,ACEb,AFFA,KAAA,CEEA,CDFoB,GAAG,SAAV,OAAU,GAAA;AACrB,AEAF,ADCA,AFFA,IGCA,EFAQ,IAAI,GAAG,AEAf,GAAA,KFAuB,CAAC,CEAxB,CAAA,YFAe,CAAwB,MAAxB,AEAf,CFAE,AEAF;ADCA,AFFA,YEEA,AFFA;ACGE,AEDF,ADiBE,AFZA,IGLF,EFCM,CAAC,IAAL,ACgBA,AFZA,CGLF,CFCa,EEDb,CHKE,CEYA,AFZY,CEYA,GFZZ,CGLF,CAAA,ADiBE,AFZkC,EEYR,GFZ1B,EEYA,AFZiD,EEYR,IFZzC,EEYA,AFZ+D,EGLjE,ADiByD,CCjBzD;AFEI,ACgBA,AFZA,SEYK,AFZA,CCJC,IDIN,CCJW,CAAC,CDIC,GEYb,EFZA,CEYmB,KAAnB,sCDhBW,CAAX;AACD,AEDH,ADiBI,AFZA,IGLE,KAAK,ADiBF,AFZA,GGLK,EDiBV,CFZA,CGLc,CDiBD,CFZC,IEYd,CCjBc,CAAA,AHKd,KGLU,CAAU,SAAA,CAAA,OAAA,EAAV,EAAqB,MAAM,CAAC,UAA5B,EAAwC,MAAM,CAAC,WAA/C,CAAd;AACA,ADiBI,AFZA,IGLE,KDiBG,AFZA,CGLG,GAAG,CHKX,CEYA,ECjBe,AHKF,CEYC,MAAd,CCjBe,AHKM,CGLN,AHKO,MGLX,CAAW,KAAX,CHKE,CGLgB,AHKO,GGLzB,EAAuB,GAAvB,AHKE,CGLjB,AHKI;ACJF,AEAF,ADiBI,AFZA,MCLI,AEAF,CAAC,EDiBE,AFZA,ICLM,CCiBX,CCjBJ,AHKI,CCLc,AEAF,CDiBC,CFZC,CGLlB,CFAE,CEAmB,GAArB;AFCE,AEAF,ADgBmB,AFZC,MGJd,ADgBa,AFZC,CGJb,ADgBa,AFZC,CGJrB,CFAS,ACgBa,AFZC,CEYN,AFZC,CGJP,KFAT,AEAc,CAAC,MAAN,GAAe,KAAK,CAAC,MAAhC;AFCC,AECD,ADcyB,AFZC,CCXnB,GESD,EDcmB,AFZC,CEYA,AFZC,EEYC,AFZC,eGFH,GAAG,SAAA,CAAA,WAAA,CAAY,wBAAZ,CAA7B;AACA,ADaiB,AFZC,IGDZ,CDaF,AFZA,oBGDuB,GAAG,SAAA,CAAA,WAAA,CAAY,yBAAZ,CAA9B;AFVa,AEWb,ADaI,AFZA,IGDE,GFXO,AEWJ,CFXI,CCwBJ,AFZA,CGDG,KFXC,AEWI,CAAC,CDad,CDxBgB,ECwBA,CFZhB,EGDJ,CHCwB,CCZX,ADYT;AGCJ,ADWsB,AFXlB,MEWkB,CAAC,EAAE,AFXhB,CEWW,CCXT,CAAC,GHAR,GAAc,MGAN,AHAY,GAAG,GAAvB;ACHG,AEIL,ADU0B,AFVxB,EGAF,EFJW,ECce,CAAC,CCVrB,CAAC,ADUsB,AFVtB,IAAL,CAAU,CCJU,GAAG,ADIvB,CGAF,CAAkB,IAAlB,GFJW,WAAc,CAAC,GAAD,EAAY;AACrC,AEID,ADSmB,AFTjB,CGFQ,EAER,EDSC,CDbI,CEEG,CAAX,CFFW,GAAG,IAAI,KAAJ,EAAZ;AACA,AEIF,ADSI,EDbF,EEIE,CFJC,CAAC,GAAJ,ACaO,CCTC,EFJE,CEIC,EFJX,GEIF,GDSI,GAAoB,CAApB;ADZF,ACaE,AFVF,EAAA,MAAA,CCHO,ACaA,AFVP,GCHA,ECaE,GAAa,CAAb,KFVF,CAAI,KAAA,CAAA,SAAJ,EAAI,MAAJ,EAAQ;ACFT,AEID,ADSI,CDjBG,GEQD,KDSG,AFXP,CGEU,GAAG,ADSX,GAAY,MCTV,EHFJ,IGEa,GAAA;AACb,ADQgB,AFVd,MGEE,ADQY,CCRX,MAAM,AHFF,CGEG,IDQgB,AFVd,CGEd,CDQ8B,CCRX,ADQL,EFVZ;ACPS,AEUT,ADO+B,AFThC,IGEC,CHJM,CEWyB,CDjBtB,CAAA,EEUH,CDO8B,ECP3B,ADO6B,CAA1B,ICPZ,CFVS,GAAW,WAAX;AEWV,ADM0C,GCR3C,GDQ2C,GCNpC,GDM0C,CCNtC,CDMwC,KCNlC,ADMuC,CCNtC,CHLV,IGKD,ADM4C,ECN1B,CDMwC;ACL/D,ADKY,ICLZ,CDKA,KCLM,GAAG,IAAT;AACD,ADKC,AFZM,GAAR,MEYO,cAAL,GAAsB,CAAtB;AACA,AFVF,EAAA,MAAA,CEUO,AFVP,KEUE,GAAa,KAAb,CFVF,CAAI,KAAA,CAAA,SAAJ,EAAI,SAAJ,EAAW;AGKX,ADME,ECNF,MAAM,CAAC,ADMA,AFXP,eAAA,EGKA,CDME,GAA0B;ACL5B,ADMI,AFXF,EGKF,IDMI,ECNE,CAAC,IDMI,AFXF,EEWI,CADe,ECL5B,AHLc,KAAL,CAAW,UAAX,CAAsB,IAAtB,CAAP;AGMF,ADMI,AFXH,EGKD,GHPW,CEaP,ECNE,CAAC,IDMI,EAAE,CAFe,WCJ5B,CAA0B,EAA1B,EAA8B,MAA9B;AACA,ADMI,ECNJ,IDMI,CCNC,CAAC,GDMG,EAAE,CAHiB,OFXjB,CGQX,CAAqB,MAAM,CAAC,CAA5B;AACA,ADMI,ECNJ,IDMI,CCNC,CAAC,IDMI,EAAE,QCNZ,CAAqB,MAAM,CAAC,CAA5B,EAA+B,CAAC,GAAhC;AACD,ADC6B,AFXjB,CGDb,EHCE,EEWE;AAMA,SAAK,YAAL;ACLJ,ADMG,AFfD,EAAA,EGSI,GHTJ,CGSQ,AHTR,GGSW,MHTX,CAAA,EGSI,IAAO,GAAA,AHTX,GAAA,YAAA;AGUA,AHTE,EGSF,GAAG,CAAC,GHTG,MGSP,CAAc,CAAd,EAAiB,CAAjB,CHTE,CGSkB,GHTG,CAArB,CGSuB,CAAC,KAA1B,EAAiC,KAAK,CAAC,MAAvC;ADMA,AFdC,EEcD,CFhBA,KEgBA,CAAA,SAAA,CAAA,YAAA,GAAA,YAAA;ACLA,ADME,MCNE,CAAC,EDME,ICNI,CAAC,KAAZ,EAAmB,MDMjB,GAA0B;ACL1B,ADME,AFfJ,EAAA,EGSE,EDME,CFfJ,CAAA,EGSQ,CAAC,EDME,EAAE,EFfb,CAAA,EEekB,KAAL,ECNX,CACE,ADKsB,GCNxB,CHTF,CGWI,ADI2B,EFf/B,GEe0B,CAAW,CAAxB,GAA4B,EFf1B,CEca,AFd5B,EAA0B,KGSxB,EAGE,AHZJ,EGSE,AHT2C,EGazC,MAAM,CAAC,CAAP,GAAW,KAAK,CAAC,MAAN,CAAa,CAJ1B,EAKE,KAAK,CAAC,MAAN,CAAa,CALf;AAOD,ADAG,AFhBsB,GGQ1B,GDQI,EFhBsB,CGgBnB,IAAI,ADAA,EAAE,AFhBa,IGgBT,CAAC,ADAA,AFhBQ,KGgBnB,AHhBmB,CEgBb,AFhBa,CGgBD,CHhBC,CEgBC,KAAK,KAAL,CAAW,CAAzB,GAA6B,GAFd;ACG1B,ADAE,AFjBsB,IGiBxB,EDAE,AFjBsB,IGiBlB,CAAC,ADAA,EAAE,AFjBe,GAAA,CAAA,CEiBV,KAAL,GAAa,CCAtB,CACE,GADF,ADA2B,ECEzB,GDFoB,CAAW,CAAxB,GAA4B,GAHX,UCG1B,EAGE,EAHF,EAIE,MAAM,CAAC,CAAP,GAAW,KAAK,CAAC,MAAN,CAAa,CAJ1B,EAKE,KAAK,CAAC,MAAN,CAAa,CALf;AAOD,ADNG,AFlByC,MEkBzC,MAAM,EAAE,KAAK,MAAL,GAAc,KAAK,KAAL,CAAW,CAAzB,GAA6B;ACO1C,ADX6B,CCR9B,IDQI;AAMA,AFnBA,SEmBK,AFnBA,IEmBL,CAAU,CFnBV,CAAY,CAAZ,GEmBA,AFnBgB,CAAC,EEmBG,CFnBA,IEmBK,GFnBzB,GEmBoB,GAAc,KAAK,KAAL,CAAW,CAA1B,GAA+B,EAAlD;ACOJ,ADNG,AFnBA,GEWD,AFbA,CG2BI,QAAQ,GAAG,SAAX,QAAW,GAAA;AACf,EAAA,MAAM;AACN,ADPA,AFnBA,EG0BA,ADPA,AFnBA,IG0BI,CH1BJ,CEmBA,AFnBA,CEmBA,QFnBA,CAAA,KEmBA,CAAI,MAAA,CAAA,CFnBJ,GAAA,KEmBA,EAAI,GAAJ,AFnBe,CAAf,CEmBK,CFnBqB,OAA1B,EAA6C;AG2B7C,AH3B0B,EG2B1B,MAAM,AH3BoB,CG2BnB,ADFP,MFzB0B,KAAA,IEyB1B,CFzB0B,CAAA,EAAA,EG2B1B,CAA6B,QAA7B;AACD,ADFG,AF1BwB,CGwB5B,KHxB4B,OE0BjB,AF1BiB,GAAA,CAAA,CE0BZ,QAAL,CAAc,CAArB;AACD,AF3B4C,KEmBxC;ACWP,IAAM,KAAK,ADXT,GCWY,SAAR,CDXE,CAAN,EAAe,CCWH,GAAA;AACZ,ADXE,AFnBA,EG8BF,MAAM,CAAC,AH9BA,EEmBA,IFnBL,CAAY,CAAZ,EEmBA,CAAc,AFnBE,CEmBhB,AFnBiB,GEmBC,AFnBE,CEmBpB,KCWF,CAA6B,AH9B3B,QG8BF;AACD,ADXE,AFnBA,CG4BH,EH9BE,EEmBK;qBAAA;ACeP,AH/BE,EAAA,IG+BI,CAAC,AH/BL,CAAA,SAAA,CAAA,IAAA,CG+BF,CAAwB,CH/BtB,KG+BF,EAAgC,GH/BzB,EG+BP,EH/BE,EAAyB;AEgBpB,AFfH,GEeF,MFfO,IAAL,CAAU,KAAV,GAAkB,KAAK,KAAvB;AEkBF,AFjBE,EEiBF,MAAA,CAAA,AFjBO,IAAL,CAAU,MAAV,GEiBF,AFjBqB,CEiBjB,IFjBsB,EEiBtB,CAAA,GFjBF,MEiBF,EAAI,GAAJ,EAAK;AFhBH,IAAA,IAAI,CEsBN,AFtBO,MAAL,CAAY,KAAK,GEsBnB,EFtBE;AEuBA,AFtBD,GAJD,UE0BS,KAAK,QAAL,CAAc,CAArB;AACD,KARI;AFdP,SEcE,AFdF,KAAA,QEcQ,CAAN,EAAe;AACb,AFnDJ,CAAA,EAAA,QEmDS,QAAL,CAAc,CAAd,GAAkB,CAAlB;AACD,KAFI;AFlDM,OAAA,CAAA,KAAA,GAAA,KEkDN,AFlDM;;AEkDN,GAAL;;AASA,EAAA,MAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UAAS,CAAT,EAAoB,CAApB,EAA6B;AAC3B,SAAK,KAAL,GAAa;AAAE,MAAA,CAAC,EAAA,CAAH;AAAK,MAAA,CAAC,EAAA;AAAN,KAAb;AACA,SAAK,YAAL;AACD,GAHD;;AAIA,EAAA,MAAA,CAAA,SAAA,CAAA,SAAA,GAAA,YAAA;AACE,SAAK,YAAL,IAAqB,CAArB;AACD,GAFD;;AAGA,EAAA,MAAA,CAAA,SAAA,CAAA,iBAAA,GAAA,UAAkB,YAAlB,EAAsC;AACpC,QAAM,cAAc,GAAG,IAAI,CAAC,KAAL,CAAW,KAAK,YAAL,GAAoB,YAA/B,CAAvB;AACA,QAAM,iBAAiB,GAAG,KAAK,YAAL,GAAoB,YAA9C;AACA,QAAM,YAAY,GAAG,iBAAiB,GAAG,KAAK,KAA9C;AACA,QAAM,YAAY,GAAG,cAAc,GAAG,KAAK,MAA3C;AAEA,WAAO;AAAE,MAAA,YAAY,EAAA,YAAd;AAAgB,MAAA,YAAY,EAAA;AAA5B,KAAP;AACD,GAPD;;AAQA,EAAA,MAAA,CAAA,SAAA,CAAA,iBAAA,GAAA,YAAA;AACE,SAAK,CAAL,IAAU,KAAK,IAAL,CAAU,KAApB;AACA,SAAK,IAAL,CAAU,KAAV,IAAmB,KAAK,IAAL,CAAU,YAA7B;;AACA,QAAI,KAAK,CAAL,GAAS,KAAK,WAAL,CAAiB,MAAjB,GAA0B,KAAK,WAAL,CAAiB,MAAxD,EAAgE;AAC9D,WAAK,CAAL,GAAS,KAAK,WAAL,CAAiB,MAAjB,GAA0B,KAAK,WAAL,CAAiB,MAApD;AACA,WAAK,IAAL,CAAU,KAAV,GAAkB,CAAlB;AACA,WAAK,KAAL,GAAa,KAAb;AACD;AACF,GARD;;AASA,EAAA,MAAA,CAAA,SAAA,CAAA,UAAA,GAAA,UAAW,GAAX,EAAuB;AACrB,QAAI,GAAG,IAAI,CAAC,KAAK,KAAjB,EAAwB;AACtB,WAAK,IAAL,CAAU,KAAV,GAAkB,CAAC,KAAK,IAAL,CAAU,MAA7B;AACA,WAAK,KAAL,GAAa,IAAb;AACD;AACF,GALD;;AAMA,EAAA,MAAA,CAAA,SAAA,CAAA,SAAA,GAAA,YAAA;AACE,SAAK,CAAL,IAAU,KAAK,KAAf;AACD,GAFD;;AAGA,EAAA,MAAA,CAAA,SAAA,CAAA,kBAAA,GAAA,UAAmB,QAAnB,EAA0C,MAA1C,EAAyD;AAAtC,QAAA,QAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,QAAA,GAAA,EAAA;AAAqB;;AACtC,SAAK,WAAL,CAAiB,SAAjB;;AACA,QAAI,KAAK,WAAL,CAAiB,YAAjB,GAAgC,KAAK,cAArC,KAAwD,CAA5D,EAA+D;AAC7D,WAAK,SAAL;;AACA,UAAI,KAAK,YAAL,IAAqB,QAAzB,EAAmC;AACjC,YAAI,CAAC,MAAL,EAAa;AACX,eAAK,YAAL,GAAoB,CAApB;AACD,SAFD,MAEO;AACL,eAAK,YAAL,GAAoB,QAAQ,GAAG,CAA/B;AACD;AACF;AACF;AACF,GAZD;;AAaA,EAAA,MAAA,CAAA,SAAA,CAAA,gBAAA,GAAA,UACE,OADF,EAEE,WAFF,EAGE,YAHF,EAIE,OAJF,EAKE,OALF,EAKiB;AAET,QAAA,EAAA,GAAiC,KAAK,iBAAL,CAAuB,YAAvB,CAAjC;AAAA,QAAE,YAAY,GAAA,EAAA,CAAA,YAAd;AAAA,QAAgB,YAAY,GAAA,EAAA,CAAA,YAA5B;;AACN,IAAA,OAAO,CAAC,SAAR,CACE,WADF,EAEE,YAFF,EAGE,YAHF,EAIE,KAAK,KAJP,EAKE,KAAK,MALP,EAME,OANF,EAOE,OAPF,EAQE,KAAK,KAAL,GAAa,KAAK,KAAL,CAAW,CAR1B,EASE,KAAK,MAAL,GAAc,KAAK,KAAL,CAAW,CAT3B;AAWD,GAnBD;;AAoBF,SAAA,MAAA;AA3HA,CAAA,EAAA;;AAAa,OAAA,CAAA,MAAA,GAAA,MAAA","file":"src.77de5100.js","sourceRoot":"..\\src","sourcesContent":["export class World {\n  width: number;\n  height: number;\n  currentFrame: number;\n  camera: { x: number; y: number };\n  ground: number;\n  private _area: HTMLCanvasElement;\n  constructor(root: HTMLDivElement, width: number, height: number) {\n    this.width = width;\n    this.height = height;\n    this._area = document.createElement(\"canvas\");\n    this.camera = { x: 0, y: 0 };\n    this.currentFrame = 0;\n    this.ground = height * 0.3;\n    this.init(root);\n  }\n  get area() {\n    return this._area;\n  }\n  get context() {\n    return this._area.getContext(\"2d\");\n  }\n  nextFrame() {\n    this.currentFrame += 1;\n  }\n  cameraObserveX(x: number, padding: number = 0) {\n    this.camera.x = x + padding;\n  }\n  cameraObserveY(y: number, padding: number = 0) {\n    this.camera.y = y + padding;\n  }\n  init(root: HTMLDivElement) {\n    this.area.width = this.width;\n    this.area.height = this.height;\n    root.append(this._area);\n  }\n}\n","export const getRoot = () => {\n  const root = document.getElementById(\"root\");\n\n  if (!root) {\n    throw Error(\"You need add div with id root to your index.html\");\n  }\n  const divRoot = root as HTMLDivElement;\n  return divRoot;\n};\n\nexport const createImage = (src: string) => {\n  const img = new Image();\n  img.src = src;\n  return img;\n};\n","import { World } from \"../world/world\";\n\nexport class Player {\n  width: number;\n  height: number;\n  private position: { x: number; y: number };\n  currentFrame: number;\n  speed: number;\n  speedAnimation: number;\n  activeWorld: World;\n  scale: { x: number; y: number };\n  collisionRectangle: {\n    xOffset: number;\n    yOffset: number;\n    width: number;\n    height: number;\n  };\n  isAir: boolean;\n  jump: { acceleration: number; speed: number; height: number };\n  constructor(world: World, width: number, height: number) {\n    this.activeWorld = world;\n    this.width = width;\n    this.height = height;\n    this.scale = { x: 1, y: 1 };\n    this.position = { x: 0, y: 0 };\n    this.currentFrame = 0;\n    this.speed = 5;\n    this.jump = { acceleration: 1, speed: 0, height: this.height / 10 };\n    this.speedAnimation = 4;\n    this.isAir = false;\n    this.collisionRectangle = {\n      xOffset: 0,\n      yOffset: 0,\n      width: 0,\n      height: 0,\n    };\n    this.updatePlayer();\n  }\n  updatePlayer() {\n    this.collisionRectangle = {\n      xOffset: this.width * this.scale.x * 0.2,\n      yOffset: this.height * this.scale.y * 0.2,\n      width: this.width * this.scale.x * 0.7,\n      height: this.height * this.scale.x * 0.7,\n    };\n    this.jump.height = (this.height * this.scale.x) / 10;\n  }\n  set x(x: number) {\n    this.position.x = x;\n  }\n  set y(y: number) {\n    this.position.y = y;\n  }\n  get x() {\n    return this.position.x;\n  }\n  get y() {\n    return this.position.y;\n  }\n  setScale(x: number, y: number) {\n    this.scale = { x, y };\n    this.updatePlayer();\n  }\n  nextFrame() {\n    this.currentFrame += 1;\n  }\n  divideSpriteSheet(framesPerRow: number) {\n    const spriteSheetRow = Math.floor(this.currentFrame / framesPerRow);\n    const spriteSheetColumn = this.currentFrame % framesPerRow;\n    const spriteSheetX = spriteSheetColumn * this.width;\n    const spriteSheetY = spriteSheetRow * this.height;\n\n    return { spriteSheetX, spriteSheetY };\n  }\n  updateGravitation() {\n    this.y += this.jump.speed;\n    this.jump.speed += this.jump.acceleration;\n    if (this.y > this.activeWorld.height - this.activeWorld.ground) {\n      this.y = this.activeWorld.height - this.activeWorld.ground;\n      this.jump.speed = 0;\n      this.isAir = false;\n    }\n  }\n  updateJump(hop: boolean) {\n    if (hop && !this.isAir) {\n      this.jump.speed = -this.jump.height;\n      this.isAir = true;\n    }\n  }\n  updateRun() {\n    this.x += this.speed;\n  }\n  updateAnimationRun(maxFrame: number = 10, single: boolean) {\n    this.activeWorld.nextFrame();\n    if (this.activeWorld.currentFrame % this.speedAnimation === 0) {\n      this.nextFrame();\n      if (this.currentFrame >= maxFrame) {\n        if (!single) {\n          this.currentFrame = 0;\n        } else {\n          this.currentFrame = maxFrame - 1;\n        }\n      }\n    }\n  }\n  drawAnimationRun(\n    context: CanvasRenderingContext2D,\n    spriteSheet: HTMLImageElement,\n    framesPerRow: number,\n    screenX: number,\n    screenY: number\n  ) {\n    const { spriteSheetX, spriteSheetY } = this.divideSpriteSheet(framesPerRow);\n    context.drawImage(\n      spriteSheet,\n      spriteSheetX,\n      spriteSheetY,\n      this.width,\n      this.height,\n      screenX,\n      screenY,\n      this.width * this.scale.x,\n      this.height * this.scale.y\n    );\n  }\n}\n","import { World } from \"./world/world\";\nimport { getRoot, createImage } from \"./helpers/helpers\";\nimport { Player } from \"./player/player\";\n\nconst world = new World(getRoot(), window.innerWidth, window.innerHeight);\nconst player = new Player(world, 363, 458);\nplayer.setScale(0.5, 0.5);\nplayer.y = world.height - world.ground;\n\nconst spriteSheetPlayerRun = createImage(\"./assets/ninja/run.png\");\nconst spriteSheetPlayerJump = createImage(\"./assets/ninja/jump.png\");\nconst ctx = world.context;\n\nsetInterval(() => {\n  player.updateJump(true);\n}, 3000);\nlet single = false;\n\nconst update = () => {\n  if (!player.isAir) {\n    single = false;\n  } else if (player.isAir) {\n    single = true;\n  }\n  player.updateGravitation();\n  player.updateRun();\n  player.updateAnimationRun(10, single);\n  world.cameraObserveY(player.y);\n  world.cameraObserveX(player.x, -150);\n};\n\nconst draw = () => {\n  ctx.clearRect(0, 0, world.width, world.height);\n  if (!player.isAir) {\n    player.drawAnimationRun(\n      ctx,\n      spriteSheetPlayerRun,\n      10,\n      player.x - world.camera.x,\n      world.camera.y\n    );\n  } else if (player.isAir) {\n    player.drawAnimationRun(\n      ctx,\n      spriteSheetPlayerJump,\n      10,\n      player.x - world.camera.x,\n      world.camera.y\n    );\n  }\n};\n\nconst mainLoop = () => {\n  update();\n  draw();\n  window.requestAnimationFrame(mainLoop);\n};\n\nconst start = () => {\n  window.requestAnimationFrame(mainLoop);\n};\n\nwindow.addEventListener(\"load\", start);\n"]}